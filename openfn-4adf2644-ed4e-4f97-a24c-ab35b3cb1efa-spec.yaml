name: openhie-project
# description:
# credentials:
# globals:
workflows:
  OpenHIE-Workflow:
    name: OpenHIE Workflow
    jobs:
      Transform-data-to-FHIR1234-standard:
        name: Transform data to FHIR1234 standard
        adaptor: '@openfn/language-http@latest'
        # credential:
        # globals:
        body: |
          console.log('Hey You!!');
          fn(state => state);
          
      Send-to-OpenHIM-to-route-to-SHR:
        name: Send to OpenHIM to route to SHR
        adaptor: '@openfn/language-http@latest'
        # credential:
        # globals:
        body: |
          fn(state => state);
          
      Notify-CHW-upload-successful:
        name: Notify CHW upload successful
        adaptor: '@openfn/language-http@latest'
        # credential:
        # globals:
        body: |
          fn(state => state);
          
      Notify-CHW-upload-failed:
        name: Notify CHW upload failed
        adaptor: '@openfn/language-http@latest'
        # credential:
        # globals:
        body: |
          fn(state => state);
          
    triggers:
      webhook:
        type: webhook
        enabled: true
    edges:
      webhook->Transform-data-to-FHIR1234-standard:
        source_trigger: webhook
        target_job: Transform-data-to-FHIR1234-standard
        condition_type: always
        enabled: true
      Transform-data-to-FHIR1234-standard->Send-to-OpenHIM-to-route-to-SHR:
        source_job: Transform-data-to-FHIR1234-standard
        target_job: Send-to-OpenHIM-to-route-to-SHR
        condition_type: on_job_success
        enabled: true
      Send-to-OpenHIM-to-route-to-SHR->Notify-CHW-upload-successful:
        source_job: Send-to-OpenHIM-to-route-to-SHR
        target_job: Notify-CHW-upload-successful
        condition_type: on_job_success
        enabled: true
      Send-to-OpenHIM-to-route-to-SHR->Notify-CHW-upload-failed:
        source_job: Send-to-OpenHIM-to-route-to-SHR
        target_job: Notify-CHW-upload-failed
        condition_type: on_job_failure
        enabled: true
  Test-workflow:
    name: Test workflow
    jobs:
      New-job:
        name: New job
        adaptor: '@openfn/language-common@latest'
        # credential:
        # globals:
        body: |
          
          // Check out the Job Writing Guide for help getting started:
          // https://docs.openfn.org/documentation/jobs/job-writing-guide
          
    triggers:
      webhook:
        type: webhook
        enabled: true
    edges:
      webhook->New-job:
        source_trigger: webhook
        target_job: New-job
        condition_type: always
        enabled: true
  kafka-test:
    name: kafka-test
    jobs:
      Job-1:
        name: Job 1
        adaptor: '@openfn/language-common@latest'
        # credential:
        # globals:
        body: |
          
          // Check out the Job Writing Guide for help getting started:
          // https://docs.openfn.org/documentation/jobs/job-writing-guide
          fn(state => { state });
    triggers:
      kafka:
        type: kafka
        enabled: true
    edges:
      kafka->Job-1:
        source_trigger: kafka
        target_job: Job-1
        condition_type: always
        enabled: true
  my-workflow-again:
    name: my workflow again
    jobs:
      New-job:
        name: New job
        adaptor: '@openfn/language-common@latest'
        # credential:
        # globals:
        body: |
          
          // Check out the Job Writing Guide for help getting started:
          // https://docs.openfn.org/documentation/jobs/job-writing-guide
          
    triggers:
      webhook:
        type: webhook
        enabled: true
    edges:
      webhook->New-job:
        source_trigger: webhook
        target_job: New-job
        condition_type: always
        enabled: true